import requests
import xml.etree.ElementTree as ET
import csv

URL = "http://10.3.6.31:9082/WS14_414_040G/services/wapiOtherSoapHttpPort"
SOAP_ACTION = "http://wapiOther/WapiOther.wsdl/getserviceinfoother"

HEADERS_TEMPLATE = lambda instance_no: {
    "Content-Type": "text/xml; charset=UTF-8",
    "SOAPAction": SOAP_ACTION,
    "instanceNo": instance_no
}

def parse_response(xml_text):
    try:
        root = ET.fromstring(xml_text)
        # Szukamy elementu kończącego się na 'pObj_inout'
        for elem in root.iter():
            if elem.tag.endswith('pObj_inout'):
                get_text = lambda name: next(
                    (child.text for child in elem if child.tag.endswith(name)), 'ERR'
                )
                return (
                    get_text('serviceVersion'),
                    get_text('facadeVersion'),
                    get_text('coreBanner')
                )
        return "ERR", "ERR", "ERR"
    except Exception:
        return "ERR", "ERR", "ERR"

# Wczytaj listę instanceNo
with open("lista.txt", "r") as f:
    instances = [line.strip() for line in f if line.strip()]

# Wczytaj szablon SOAP z pliku
with open("soap_request3.xml", "r", encoding="utf-8") as f:
    soap_template = f.read()

# Przygotuj plik CSV do zapisu wyników
with open("output.csv", "w", newline="", encoding="utf-8") as csvfile:
    writer = csv.writer(csvfile)
    writer.writerow(["instanceNo", "serviceVersion", "facadeVersion", "coreBanner"])

    for instance_no in instances:
        headers = HEADERS_TEMPLATE(instance_no)
        body = soap_template.replace("{instance_no}", instance_no)

        try:
            response = requests.post(URL, data=body, headers=headers, verify=False)
            filename = f"response_{instance_no}.xml"

            with open(filename, "w", encoding="utf-8") as out:
                out.write(response.text)

            version, facade, banner = parse_response(response.text)
            writer.writerow([instance_no, version, facade, banner])

            print(f"{instance_no} → OK ({response.status_code})")

        except Exception as ex:
            writer.writerow([instance_no, "ERR", "ERR", "ERR"])
            print(f"{instance_no} → ERROR: {ex}")